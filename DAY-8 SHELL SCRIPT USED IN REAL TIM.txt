DAY-8 SHELL SCRIPT USED IN REAL TIME GITHUB API INTEGRATION

1. OPEN GITHUB ACCOUNT AND CREATE AN ORGANIZATION. ADD PEOPLE WITH BASE PERMISSIONS.
2. CREATE A REPO AND PUSH THE FILES INTO ORGANIZATION.
3. CREATE A TOKEN AND EC2 INSTANCE, INSTALL GIT, AND CONFIG USERNAME AND PASSWORD
git config --global --list
git config --global user.name "akhilprabhu20"
git config --global password "@2005AKHIL"

export username="akhilprabhu20"
export token=""

git clone "https://github.com/iam-veeramalla/shell-scripting-projects.git"
cd /shell-scripts-projects/github-api
ls --------- list-users.sh
chmod 777 list-users.sh
list-users.sh
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++======
#!/bin/bash

# GitHub API URL
API_URL="https://api.github.com"

# GitHub username and personal access token
USERNAME=$username
TOKEN=$token

# User and Repository information
REPO_OWNER=$1
REPO_NAME=$2

# Function to make a GET request to the GitHub API
function github_api_get {
    local endpoint="$1"
    local url="${API_URL}/${endpoint}"

    # Send a GET request to the GitHub API with authentication
    curl -s -u "${USERNAME}:${TOKEN}" "$url"
}

# Function to list users with read access to the repository
function list_users_with_read_access {
    local endpoint="repos/${REPO_OWNER}/${REPO_NAME}/collaborators"

    # Fetch the list of collaborators on the repository
    collaborators="$(github_api_get "$endpoint" | jq -r '.[] | select(.permissions.pull == true) | .login')"

    # Display the list of collaborators with read access
    if [[ -z "$collaborators" ]]; then
        echo "No users with read access found for ${REPO_OWNER}/${REPO_NAME}."
    else
        echo "Users with read access to ${REPO_OWNER}/${REPO_NAME}:"
        echo "$collaborators"
    fi
}

# Main script

echo "Listing users with read access to ${REPO_OWNER}/${REPO_NAME}..."
list_users_with_read_access
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
./list-users.sh akhildevops-practice shellscript-1
